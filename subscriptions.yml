openapi: 3.0.3
info:
  title: Loyalty & Promo API for Online Cinema
  description: |
    Система лояльности для онлайн-кинотеатра: покупка платной версии, триал, скидки, генерация промокодов, применение,
    отслеживание отказов и откат, если оплата не прошла.
    - "POST /subscribe { user_id, subscription_id }"
    - Применяем или изменяем промокод после создания заказа.
    - "PATCH /subscribe/{subscribe_order_id, user_id, promo_code }"
    - "Backend проверяет код и возвращает price_after_discount"
    - "Клиент платит price_after_discount"
    - "POST /subscribe/pay { user_id, subscribe_order_id }"
    - "POST /payments { user_id, amount, currency, "payment_method": "card" }"
    - "Если провал — POST /promo/revert { user_id, promo_id, subscribe_id }"
  version: "1.0.2"

servers:
  - url: https://api.yourcinema.example/v1
    description: Основной продакшн сервер
  - url: https://staging-api.yourcinema.example/v1
    description: Стейджинг для тестов

security:
  - api_key_auth: []

paths:
  /subscribe:
    post:
      summary: "Создать покупку (платная версия или триал) с опциональным промокодом"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscribe_order_request'
      responses:
        '201':
          description: "Инфо о созданной покупке"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribe_order_response'
        '400':
          description: "Неверный запрос или код недействителен"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'

    patch:
      summary: "Добавить промокод к существующему заказу"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apply_promo_request'
      responses:
        '200':
          description: "Обновлённый заказ"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribe_order_response'
        '400':
          description: "Невалидный запрос или промокод недействителен"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
        '404':
          description: "Заказ не найден"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_error_response'

  /subscribe/pay:
    post:
      summary: "Оплатить существующий заказ"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_payment_request'
      responses:
        '200':
          description: "Заказ оплачен"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribe_order_response'
        '400':
          description: "Неверный запрос или код недействителен"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
        '404':
          description: "Заказ не найден"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_error_response'

components:
  schemas:
    error_response:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Invalid promo code"

    404_error_response:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Not found"

    subscribe_order_request:
      type: object
      required:
        - user_id
        - subscription_id
      properties:
        user_id:
          type: string
          description: ID пользователя
        subscription_id:
          type: string
          description: ID плана подписки
        promo:
          type: string
          nullable: true
          description: |
            "trial" = триал, иначе промокод для расчёта `price_after_discount`
        price_before_discount:
          type: number
          format: float
          description: Сумма до скидки
        price_after_discount:
          type: number
          format: float
          description: Сумма после скидки

    subscribe_order_response:
      type: object
      properties:
        subscribe_order_id:
          type: string
        applied_promo_code:
          type: string
          nullable: true
        price_before_discount:
          type: number
          format: float
        price_after_discount:
          type: number
          format: float
        status:
          type: string
          enum: [created, payment_pending, paid, payment_failed, cancelled]

    apply_promo_request:
      type: object
      required:
        - user_id
        - subscribe_order_id
        - promo_code
      properties:
        user_id:
          type: string
        subscribe_order_id:
          type: string
        promo_code:
          type: string

    order_payment_request:
      type: object
      required:
        - user_id
        - subscribe_order_id
      properties:
        user_id:
          type: string
        subscribe_order_id:
          type: string
