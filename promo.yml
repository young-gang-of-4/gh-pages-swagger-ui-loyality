openapi: 3.1.0
info:
  title: Promo Code Service API
  description: API for managing and validating promo codes
  version: 1.0.0

paths:
  /promo_codes:
    post:
      summary: Create a new promo code
      description: Create a new promo code with specified parameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoCodeCreate"
      responses:
        "201":
          description: Promo code created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromoCode"
        "400":
          description: Invalid input
        "409":
          description: Promo code already exists

    get:
      summary: List all promo codes
      description: Retrieve a list of all promo codes with optional filtering
      parameters:
        - $ref: "#/components/parameters/isActive"
        - $ref: "#/components/parameters/codeType"
        - $ref: "#/components/parameters/expired"
      responses:
        "200":
          description: A list of promo codes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PromoCode"

  /promo_codes/{code}:
    get:
      summary: Get promo code details
      description: Retrieve details about a specific promo code
      parameters:
        - $ref: "#/components/parameters/code"
      responses:
        "200":
          description: Promo code details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromoCode"
        "404":
          description: Promo code not found

    delete:
      summary: Delete a promo code
      description: Mark a promo code as inactive (soft delete)
      parameters:
        - $ref: "#/components/parameters/code"
      responses:
        "204":
          description: Promo code deleted successfully
        "404":
          description: Promo code not found

  /promo_codes/{code}/validate:
    post:
      summary: Validate a promo code
      description: Check if a promo code is valid for use
      parameters:
        - $ref: "#/components/parameters/code"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidationRequest"
      responses:
        "200":
          description: Validation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
        "404":
          description: Promo code not found
  
  /promo_codes/generate:
    post:
      summary: "Generate promo codes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoCodeGenerate"
      responses:
        '201':
          description: "List generated promo codes"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PromoCode"
        "400":
          description: Invalid input
        "409":
          description: Promo code already exists
    
  /promo_codes/apply:
    post:
      summary: "Apply promo code"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyPromoCodeRequest'
      responses:
        '200':
          description: "Apply result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyPromoCodeResponse'
        "400":
          description: Invalid input

  /promo_codes/revert:
    post:
      summary: "Revert promo code"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevertPromoCodeRequest'
      responses:
        '200':
          description: "Promo code reverted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertPromoCodeResponse'
        "400":
          description: Invalid input

components:
  schemas:
    PromoCodeCreate:
      type: object
      required:
        - code
        - type
        - valid_from
        - valid_to
      properties:
        code:
          type: string
          description: The actual promo code string
          example: "SUMMER2023"
        description:
          type: string
          description: Optional description of the promo code
          example: "Summer discount 2023"
        type:
          type: string
          enum: [single_use, multi_use, unlimited]
          description: Type of promo code usage
          example: "multi_use"
        max_uses:
          type: integer
          description: Maximum number of uses (required for multi_use type)
          example: 100
        discount_type:
          type: string
          enum: [percentage, fixed_amount]
          description: Type of discount
          example: "percentage"
        discount_value:
          type: number
          description: Value of discount (percentage or fixed amount)
          example: 20
        valid_from:
          type: string
          format: date-time
          description: When the promo code becomes active
          example: "2023-06-01T00:00:00Z"
        valid_to:
          type: string
          format: date-time
          description: When the promo code expires
          example: "2023-08-31T23:59:59Z"
        is_active:
          type: boolean
          description: Whether the promo code is active
          default: true
          example: true
        applicable_products:
          type: array
          items:
            type: string
          description: List of product IDs this code applies to (empty for all)
          example: ["film_1", "film_2"]

    PromoCodeGenerate:
      type: object
      required:
        - prefix
        - count
        - length
        - valid_from
        - valid_to
      properties:
        prefix:
          type: string
          description: "Префикс для кода"
        count:
          type: integer
          description: "Сколько кодов сгенерировать"
        length:
          type: integer
          nullable: true
          default: 8
          description: "Длина кода вместе с префиксом"
        description:
          type: string
          description: Optional description of the promo code
          example: "Summer discount 2023"
        type:
          type: string
          enum: [single_use, multi_use, unlimited]
          description: Type of promo code usage
          example: "multi_use"
        max_uses:
          type: integer
          description: Maximum number of uses (required for multi_use type)
          example: 100
        discount_type:
          type: string
          enum: [percentage, fixed_amount]
          description: Type of discount
          example: "percentage"
        discount_value:
          type: number
          description: Value of discount (percentage or fixed amount)
          example: 20
        valid_from:
          type: string
          format: date-time
          description: When the promo code becomes active
          example: "2023-06-01T00:00:00Z"
        valid_to:
          type: string
          format: date-time
          description: When the promo code expires
          example: "2023-08-31T23:59:59Z"
        is_active:
          type: boolean
          description: Whether the promo code is active
          default: true
          example: true
        applicable_products:
          type: array
          items:
            type: string
          description: List of product IDs this code applies to (empty for all)
          example: ["film_1", "film_2"]

    PromoCode:
      allOf:
        - $ref: "#/components/schemas/PromoCodeCreate"
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: "550e8400-e29b-41d4-a716-446655440000"
            created_at:
              type: string
              format: date-time
              example: "2023-05-15T12:00:00Z"
            updated_at:
              type: string
              format: date-time
              example: "2023-05-15T12:00:00Z"
            current_uses:
              type: integer
              description: Number of times the code has been used
              example: 42

    ValidationRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string
          description: ID of the user attempting to use the promo code
          example: "user_123"
        product_id:
          type: string
          description: ID of the product being purchased (for product-specific codes)
          example: "prod_123"
        order_amount:
          type: number
          description: Total order amount (for minimum order validations)
          example: 100.50

    ValidationResponse:
      type: object
      properties:
        is_valid:
          type: boolean
          description: Whether the promo code is valid for this use
          example: true
        discount_amount:
          type: number
          description: Calculated discount amount if valid
          example: 20.10
        error_message:
          type: string
          description: Error message if not valid
          example: "Promo code has expired"
        code_details:
          $ref: "#/components/schemas/PromoCode"
    
    ApplyPromoCodeRequest:
      type: object
      required:
        - user_id
        - prome_code
      properties:
        user_id:
          type: string
        prome_code:
          type: string

    ApplyPromoCodeResponse:
      type: object
      properties:
        success:
          type: boolean
        code:
          type: string
        discount_type:
          type: string
          enum: [percentage, fixed_amount]
          description: Type of discount
          example: "percentage"
        discount_value:
          type: number
          description: Value of discount (percentage or fixed amount)
          example: 20
        reason:
          type: string
          nullable: true
          description: Причина отказа (если success=false)

    RevertPromoCodeRequest:
      type: object
      required:
        - user_id
        - promo_id
        - subscribe_id
      properties:
        user_id:
          type: string
        promo_id:
          type: string
        subscribe_id:
          type: string
        reason:
          type: string
          nullable: true
          description: Причина отката (например, оплата не прошла)

    RevertPromoCodeResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true


  parameters:
    code:
      name: code
      in: path
      description: Promo code string
      required: true
      schema:
        type: string
    isActive:
      name: is_active
      in: query
      description: Filter by active status
      required: false
      schema:
        type: boolean
    codeType:
      name: type
      in: query
      description: Filter by promo code type
      required: false
      schema:
        type: string
        enum: [single_use, multi_use, unlimited]
    expired:
      name: expired
      in: query
      description: Filter by expired status
      required: false
      schema:
        type: boolean
